%x = -3:0.1:3;
%y = -10:0.2:10;
%[X, Y] = meshgrid(x, y);
%Z = (1 - X).^2 + 10*(Y - X.^2).^2;
%surf(X, Y, Z);
f = @(v)((1 - v(1)).^2 + 10*(v(2) - v(1).^2).^2);
x = -1;
y = 8;
wrap = [x; y];
ans1 = f(wrap);
save('A1.dat', 'ans1', '-ascii');
ans2 = fminsearch(f, [-1, 8]);
ans2 = ans2.';
save('A2.dat', 'ans2', '-ascii');
ans3 = gradient([-1, 8]);
save('A3.dat', 'ans3', '-ascii');
ans4 = norm(ans3, Inf);
save('A4.dat', 'ans4', '-ascii');
ans5 = phi(0.1);
save('A5.dat', 'ans5', '-ascii');
ans6 = f(ans5);
save('A6.dat', 'ans6', '-ascii');
wrapper = @(t)(f(phi(t)));
ans7 = fminbnd(wrapper, 0, 0.1);
save('A7.dat', 'ans7', '-ascii');
ans8 = phi(ans7);
save('A8.dat', 'ans8', '-ascii');
tolerance = 10^-4;
guess = [-1; 8];
k = 0;
while norm(gradient(guess), Inf) >= tolerance
    newPhi = @(t)(guess - t*gradient(guess));
    otherWrap = @(q)(f(newPhi(q)));
    z = fminbnd(otherWrap, 0, 0.1);
    guess = newPhi(z);
    k = k + 1;
end
save('A9.dat', 'guess', '-ascii');
save('A10.dat', 'k', '-ascii');